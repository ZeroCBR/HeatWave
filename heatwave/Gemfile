source 'https://rubygems.org'

# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '4.2.4'
# Use sqlite3 as the database for Active Record
gem 'sqlite3'
# Use SCSS for stylesheets
gem 'sass-rails', '~> 5.0'
# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'
# Use CoffeeScript for .coffee assets and views
gem 'coffee-rails', '~> 4.1.0'
# See https://github.com/rails/execjs#readme for more supported runtimes
# gem 'therubyracer', platforms: :ruby

# Use jquery as the JavaScript library
gem 'jquery-rails'
# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
gem 'turbolinks'
# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 2.0'
# bundle exec rake doc:rails generates the API under doc/api.
gem 'sdoc', '~> 0.4.0', group: :doc
# avoid tzinfo-data not found
gem 'tzinfo-data'
# use old version coffee script
gem 'coffee-script-source', '1.8.0'
# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'
#  use scheduler
gem 'rufus-scheduler'

# Devise provides user authentication.
gem 'devise'

PULLER_HOME = ENV['PULLER_HOME'] || '../puller'
SENDER_HOME = ENV['SENDER_HOME'] || '../sms_sender'
MESSENGER_HOME = ENV['MESSENGER_HOME'] || '../messenger'

# Use the Heatwave data puller
gem 'puller', '~> 1.0.0', path: PULLER_HOME

# Use the Heatwave SMS sender
gem 'sms_sender', '~> 1.0.0', path: SENDER_HOME

# Use the Heatwave messenger
gem 'messenger', '~> 1.0.1', path: MESSENGER_HOME

# Use Unicorn as the app server
# gem 'unicorn'

# Use Capistrano for deployment
# gem 'capistrano-rails', group: :development

# Timezone data

group :development, :test do
  # Call 'byebug' anywhere in the code to stop execution and get a
  # debugger console
  gem 'byebug'

  # Access an IRB console on exception pages or by using <%= console %>
  # in views
  gem 'web-console', '~> 2.0'

  # Spring speeds up development by keeping your application running in
  # the background. Read more: https://github.com/rails/spring
  gem 'spring'

  # Rubocop provides Ruby code linting based on the community styleguide.
  gem 'rubocop'
end
